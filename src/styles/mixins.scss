// to rem
@function toRem($value) {
  $remValue: ($value / 16) + rem;
  @return $remValue;
}

// to em
@function toEm($pixels, $context: $browser-context) {
  @return #{$pixels/$context}em;
}

$maxWidth: 1920;
$maxWidthContainer: 1290;

@mixin adaptive-value($property, $startSize, $minSize, $type) {
  $addSize: $startSize - $minSize;
  @if ($type==1) {
    #{$property}: $startSize + px;
    @media (max-width: #{$maxWidthContainer + px}) {
      #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 375px) / #{$maxWidthContainer - 375}));
    }
  } @else if ($type==2) {
    #{$property}: $startSize + px;
    @media (min-width: #{$maxWidthContainer + px}) {
      #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 375px) / #{$maxWidth - 375}));
    }
  } @else {
    #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 375) / #{$maxWidth - 375}));
  }
}

// --- USAGE: ---

//    .selector {
//        @include adaptive-value("padding", 50, 20, 0);
//        // padding: calc(20px + (50 - 20) * ((100vw - 375px) / (1920 - 320)));
//    }